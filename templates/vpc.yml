AWSTemplateFormatVersion: 2010-09-09
Description: "Practice-Build VPC by CFn"
Parameters:
  StageName:
    Type: String
  SystemName:
    Type: String
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-internet-gateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    DependsOn: VPCGatewayAttachment
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-public-subnet-1a
      VpcId: !Ref VPC
  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    DependsOn: VPCGatewayAttachment
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}c
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-public-subnet-1c
      VpcId: !Ref VPC
  PublicSubnet1d:
    Type: AWS::EC2::Subnet
    DependsOn: VPCGatewayAttachment
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}d
      CidrBlock: 10.1.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-public-subnet-1c
      VpcId: !Ref VPC
  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    DependsOn: VPCGatewayAttachment
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: 10.0.10.0/24
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-private-subnet-1a
      VpcId: !Ref VPC
  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    DependsOn: VPCGatewayAttachment
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}c
      CidrBlock: 10.0.11.0/24
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-private-subnet-1c
      VpcId: !Ref VPC
  PrivateSubnet1d:
    Type: AWS::EC2::Subnet
    DependsOn: VPCGatewayAttachment
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}d
      CidrBlock: 10.0.12.0/24
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-private-subnet-1c
      VpcId: !Ref VPC
  EIP1a:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-eip-1a
  NATGateway1a:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP1a
        - AllocationId
      SubnetId: !Ref PublicSubnet1a
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-nat-gateway-1a
  EIP1c:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-eip-1c
  NATGateway1c:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP1c
        - AllocationId
      SubnetId: !Ref PublicSubnet1c
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-nat-gateway-1c
  EIP1d:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-eip-1d
  NATGateway1d:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP1d
        - AllocationId
      SubnetId: !Ref PublicSubnet1d
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-nat-gateway-1d
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn: VPCGatewayAttachment
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-public-route-table
      VpcId: !Ref VPC
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PrivateRouteTable1a:
    Type: AWS::EC2::RouteTable
    DependsOn: NATGateway1a
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-private-route-table-1a
      VpcId: !Ref VPC
  PrivateRoute1a:
    Type: AWS::EC2::Route
    DependsOn: NATGateway1a
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRouteTable1a
  PrivateRouteTable1c:
    Type: AWS::EC2::RouteTable
    DependsOn: NATGateway1c
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-private-route-table-1c
      VpcId: !Ref VPC
  PrivateRoute1c:
    Type: AWS::EC2::Route
    DependsOn: NATGateway1c
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRouteTable1c
  PrivateRouteTable1d:
    Type: AWS::EC2::RouteTable
    DependsOn: NATGateway1d
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${SystemName}-${StageName}-private-route-table-1d
      VpcId: !Ref VPC
  PrivateRoute1d:
    Type: AWS::EC2::Route
    DependsOn: NATGateway1d
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRouteTable1d
  PublicSubnet1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1a
  PublicSubnet1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1c
  PublicSubnet1dRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1d
  PrivateSubnet1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1a
      SubnetId: !Ref PrivateSubnet1a
  PrivateSubnet1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1c
      SubnetId: !Ref PrivateSubnet1c
  PrivateSubnet1dRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1d
      SubnetId: !Ref PrivateSubnet1d
Outputs:
  VPC:
    Export:
      Name: !Sub ${SystemName}-${StageName}-vpc
    Value: !Ref VPC
  PublicSubnet1a:
    Export:
      Name: !Sub ${SystemName}-${StageName}-public-subnet-1a
    Value: !Ref PublicSubnet1a
  PublicSubnet1c:
    Export:
      Name: !Sub ${SystemName}-${StageName}-public-subnet-1c
    Value: !Ref PublicSubnet1c
  PublicSubnet1d:
    Export:
      Name: !Sub ${SystemName}-${StageName}-public-subnet-1d
    Value: !Ref PublicSubnet1d
  PrivateSubnet1a:
    Export:
      Name: !Sub ${SystemName}-${StageName}-private-subnet-1a
    Value: !Ref PrivateSubnet1a
  PrivateSubnet1c:
    Export:
      Name: !Sub ${SystemName}-${StageName}-private-subnet-1c
    Value: !Ref PrivateSubnet1c
  PrivateSubnet1d:
    Export:
      Name: !Sub ${SystemName}-${StageName}-private-subnet-1d
    Value: !Ref PrivateSubnet1d
